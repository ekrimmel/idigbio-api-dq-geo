#load libraries for data wrangling
library(ridigbio)
library(tidyverse)
#load libraries for visualizing data in graphs and maps
library(ggplot2)
library(leaflet)
library(kableExtra)
#get data from iDigBio API: records with geo coordinate issues from LACM
df_flagCoord <- idig_search_records(rq = list(flags = "rev_geocode_corrected", institutioncode = "lacm"),
fields = c("uuid","institutioncode", "collectioncode", "country", "data.dwc:country",
"stateprovince", "county", "locality", "geopoint",
"data.dwc:decimalLongitude", "data.dwc:decimalLatitude", "flags"),
limit = 100000) %>%
rename(provider_lon = `data.dwc:decimalLongitude`) %>%
rename(provider_lat = `data.dwc:decimalLatitude`) %>%
rename(provider_country = `data.dwc:country`) %>%
rename(aggregator_lon = `geopoint.lon`) %>%
rename(aggregator_lat = `geopoint.lat`) %>%
rename(aggregator_country = country) %>%
rename(aggregator_stateprovince = stateprovince) %>%
rename(aggregator_county = county) %>%
rename(aggregator_locality = locality) %>%
select(uuid, institutioncode, collectioncode, provider_lat, aggregator_lat, provider_lon,
aggregator_lon, provider_country, aggregator_country, aggregator_stateprovince,
aggregator_county, aggregator_locality, flags)
#summarize flagged records by collection type
spmByColl <- df_flagCoord %>% group_by(collectioncode) %>% tally()
#generate graph to display counts of flagged records by collection within the institution
graph_spmByColl <- ggplot(spmByColl, aes(x = collectioncode, y = n, fill = collectioncode)) +
geom_col() +
theme(panel.background = element_blank(),
legend.title = element_blank(),
axis.title.x = element_text(face = "bold"),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_text(face = "bold"),
plot.title = element_text(size = 12, face = "bold")
) +
labs(x = "collection",
y = "# of specimen records",
title = "LACM records flagged with geo-coordinate data quality issues by iDigBio") +
geom_text(aes(label = n, vjust = -0.5))
#get count of total records published by the institution
totalInstSpm <- idig_count_records(rq = list(institutioncode = "lacm"))
#calculate flagged records as percent of total records
percentFlagged <- sum(spmByColl$n)/totalInstSpm*100
#generate graph to display what percent these flagged records are of total records published
#by this institution
totalInstSpm <- spmByColl %>%
add_row(collectioncode = "total", n = totalInstSpm)
graph_totalSpm <- ggplot(totalInstSpm, aes(x = collectioncode, y = n, fill = collectioncode)) +
geom_col() +
theme(panel.background = element_blank(),
legend.title = element_blank(),
axis.title.x = element_text(face = "bold"),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_text(face = "bold"),
plot.title = element_text(size = 12, face = "bold")
) +
labs(x = "collection",
y = "# of specimen records",
title = "Flagged records vs. total records published to iDigBio") +
geom_text(aes(label = n, vjust = -0.5))
#create function to allow subsetting the df_flagCoord dataset by other flags found on these records
df_flagSubset <- function(subsetFlag) {
df_flagCoord %>%
filter(grepl(subsetFlag, flags)) %>%
select(uuid, matches("_lat|_lon")) %>%
unite(provider_coords, c("provider_lat", "provider_lon"), sep = ",") %>%
unite(aggregator_coords, c("aggregator_lat", "aggregator_lon"), sep = ",") %>%
gather(key = type, value = coordinates, -uuid) %>%
separate(coordinates, c("lat","lon"), sep = ",") %>%
mutate(lat = as.numeric(lat)) %>%
mutate(lon = as.numeric(lon)) %>%
arrange(uuid, type)
}
#subset df_flagCoord by records flagged for having had their latitude negated to place point in
#stated country by reverse geocoding process
df_rev_geocode_lat_sign <- df_flagSubset("rev_geocode_lat_sign")
#create map displaying a few examples of records with the rev_geocode_flip_lat_sign flag
pal <- colorFactor(palette = c("#d7191c", "#fdae61", "#ffffbf", "#abdda4", "#2b83ba"),
domain = df_rev_geocode_lat_sign$uuid[1:10])
map <- df_rev_geocode_lat_sign[1:10,] %>%
mutate(popup = str_c(type, " = ", lat, ", ", lon, sep = "")) %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng = ~lon,
lat = ~lat,
radius = 10,
weight = 1,
color = ~pal(uuid),
stroke = FALSE,
fillOpacity = 100,
popup = ~popup) %>%
addLegend("bottomright", pal = pal, values = ~uuid,
title = "Specimen Records",
opacity = 1)
map
graph_spmByColl
graph_totalSpm
df_flagCoord[1:50,] %>%
select(-flags) %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
font_size = 8,
fixed_thead = T)
#collate df describing other data quality flags that are associated with this one
df_flagAssoc <- df_flagCoord %>%
select(uuid, flags) %>%
unnest(flags) %>%
group_by(flags) %>%
tally() %>%
mutate("category" = case_when(str_detect(flags, "geo|country|state")
~ "geography",
str_detect(flags, "dwc_datasetid_added|dwc_multimedia_added|datecollected_bounds")
~ "other",
str_detect(flags, "gbif|dwc|tax")
~ "taxonomy")) %>%
arrange(category, desc(n))
df_flagAssoc %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
rmarkdown::render("ridigbio_flagcoords.Rmd")
